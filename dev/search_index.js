var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SparseQuadrature","category":"page"},{"location":"#SparseQuadrature","page":"Home","title":"SparseQuadrature","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SparseQuadrature.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SparseQuadrature]","category":"page"},{"location":"#SparseQuadrature.SmolyakQuadrature-Union{Tuple{d}, Tuple{MultiIndexing.MultiIndexSet{d}, Union{Tuple, AbstractVector}}} where d","page":"Home","title":"SparseQuadrature.SmolyakQuadrature","text":"SmolyakQuadrature(mset, rules)\n\nCreate a Smolyak quadrature rule from a multi-index set and a set of rules\n\nArguments\n\nmset: MultiIndexSet\nrules: Vector of rules for each dimension. rules[j](n::Int) should return a quadrature rule (pts,wts) for dimension j exact up to order n\n\n\n\n\n\n","category":"method"},{"location":"#SparseQuadrature.gausspatterson01-Tuple{Int64}","page":"Home","title":"SparseQuadrature.gausspatterson01","text":"gausspatterson01(n)\n\nNested gausspatterson rule adapted from John Burkardt's implementation.\n\nn must be 1, 3, 7, 15, 31, 63, 127, 255 or 511.\n\nSee here for more information\n\n\n\n\n\n","category":"method"}]
}
